#
# Example .tmux.conf
#
# By Nicholas Marriott. Public domain.
#
#

run-shell 'tmux setenv -g TMUX_VERSION $(tmux -V | \
                            sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'

# environment variable
set-environment -g POWERLINE_CONFIG_COMMAND /Users/pikajian/Library/Python/2.7/bin/powerline-config
set-option -g default-command '~/bin/reattach-to-user-namespace -l zsh'

# Some tweaks to the status line
set -g status-bg green
set -g status-right "%H:%M Continuum status: #{continuum_status}"

#old tmux 2.8
if-shell -b '[ "$(echo "$TMUX_VERSION < 2.9" | bc)" = 1 ]' \
    'set -g window-status-current-attr "underscore"'

if-shell -b '[ "$(echo "$TMUX_VERSION >= 2.9" | bc)" = 1 ]' \
    'set -g window-status-current-style "underscore"'

# No bells at all
set -g bell-action none

# Lock after 15 minutes
set -g lock-after-time 1800

# Keep windows around after they exit
set -g remain-on-exit off

# Turn on xterm-keys so that additional function keys get escape sequences
#set -g xterm-keys on

# Turn the mouse on, but without copy mode dragging
set -g mouse on
#unbind -n MouseDrag1Pane

# Keys to toggle monitoring activity in a window, and synchronize-panes
bind m set monitor-activity
bind y set synchronize-panes\; display 'synchronize-panes #{?synchronize-panes,on,off}'

# Keys to hide and show a window name from the status line
bind '-' set window-status-format '#I'\; set window-status-current-format '#I'
bind '+' set window-status-format '#I:#W#F'\; set window-status-current-format '#I:#W#F'


run-shell "/Users/pikajian/Library/Python/2.7/bin/powerline-daemon -q"
source /Users/pikajian/Library/Python/2.7/lib/python/site-packages/powerline/bindings/tmux/powerline.conf

#status bar top
set-option -g status-position bottom
#set -g utf8
#set-window-option -g utf8 on
#color
set -g default-terminal "screen-256color"
#resurrect
set -g @resurrect-strategy-vim 'session'

# Allow us to reload our Tmux configuration while
# using Tmux
bind C-r source-file ~/.tmux.conf \; display "Reloaded!"

# Change the prefix key to C-a
set -g prefix M-o
unbind C-b
bind M-o send-prefix


# Smart pane switching with awareness of vim and fzf
forward_programs="view|n?vim?|fzf"
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?|fzf|ssh)(diff)?$'"

#is_vim='`echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(view|n?vim?x?)(diff)?$"` || `echo "#T" | grep -iqE "(^|\/)fzf$"`'
bind-key -n C-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
bind-key -n C-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
bind-key -n C-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
bind-key -n C-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"

#old tmux 2.8
if-shell -b '[ "$(echo "$TMUX_VERSION < 2.9" | bc)" = 1 ]' \
    'bind-key -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"'

if-shell -b '[ "$(echo "$TMUX_VERSION >= 2.9" | bc)" = 1 ]' \
    'bind-key -n C-\\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"'

# I'm a Vim user, this makes navigation easier
setw -g mode-keys vi # I especially like being able to search with /,? when in copy-mode
set -g status-keys vi
bind-key Escape copy-mode

# copy setting --------------------------------
setw -g mode-keys vi

#start vi selection
bind -T copy-mode-vi v   send -X begin-selection

# buffer缓存复制到Mac系统粘贴板
bind-key C-c run "tmux save-buffer - | ~/bin/reattach-to-user-namespace pbcopy"
bind -T copy-mode-vi y   send -X copy-pipe "reattach-to-user-namespace pbcopy" \; send -X clear-selection # Copy to clipboard
# Mac系统粘贴板内容复制到会话
bind-key C-v run "~/bin/reattach-to-user-namespace pbpaste | tmux load-buffer - && tmux paste-buffer -d"
# 绑定y键为复制选中文本到Mac系统粘贴板
bind-key -T copy-mode-vi 'y' send-keys -X copy-pipe-and-cancel '~/bin/reattach-to-user-namespace pbcopy'
# 鼠标拖动选中文本，并复制到Mac系统粘贴板
bind-key -T copy-mode-vi MouseDragEnd1Pane send -X copy-pipe-and-cancel "pbcopy"

# vi-mode copy
# bind-key -T copy-mode-vi 'p' send -X copy-pipe-and-cancel "~/bin/reattach-to-user-namespace pbpaste | tmux load-buffer - \; tmux paste-buffer -d"

# panes
# old tmux 2.8
if-shell -b '[ "$(echo "$TMUX_VERSION < 2.9" | bc)" = 1 ]' ' \
    set -g pane-border-bg colour234 \
    set -g pane-border-fg colour234 \
    set -g pane-active-border-bg colour118 \
    set -g pane-active-border-fg colour118'

if-shell -b '[ "$(echo "$TMUX_VERSION >= 2.9" | bc)" = 1 ]' ' \
    set -g pane-border-style fg=colour234,bg=colour234 \
    set -g pane-active-border-style fg=colour118,bg=colour118'

# ---------- window related setting ----------

# Shift arrow to switch windows
bind -n S-h  previous-window
bind -n S-l next-window


#swap window
bind-key S-Left swap-window -t -1
bind-key S-Right swap-window -t +1
#prefix + z maximize current panel and hide others panel
# split window
unbind '"'
# vertical split (prefix -)
bind - splitw -v
unbind %
bind | splitw -h # horizontal split (prefix |)

#plugins
set -g @plugin 'tmux-plugins/tpm'  #插件管理器
set -g @plugin 'tmux-plugins/tmux-sensible'  #常用的高级设置
set -g @plugin 'tmux-plugins/tmux-resurrect' #session持久化
set -g @plugin 'tmux-plugins/tmux-pain-control' #vim模式的快捷键
set -g @plugin 'tmux-plugins/tmux-prefix-highlight' #高亮按下前缀键
#set -g @plugin 'christoomey/vim-tmux-navigator'
set -g @plugin 'tmux-plugins/tmux-continuum'

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'

